package main

import (
	"fmt"
	"log"
	"net/http"

	_ "github.com/george124816/generator/docs" // generated by swag init
	httpSwagger "github.com/swaggo/http-swagger/v2"

	"github.com/george124816/generator/internal/documents"
)

type CpfResponse struct {
	CPF string `json:"cpf" example:"12345678912`
}

// @title Generator API
// @version 1.0
// @description API for generating CPF and CNPJ
// @servers http://localhost:4000
// @servers https://api.myserver.com
// @BasePath /
func main() {
	mux := http.NewServeMux()

	mux.HandleFunc("/cpf", handleCpf)
	mux.HandleFunc("/cnpj", handleCnpj)

	mux.HandleFunc("/swagger/", func(w http.ResponseWriter, r *http.Request) {
		httpSwagger.WrapHandler.ServeHTTP(w, r)
	})

	log.Printf("serving at port %s\n", ":4000")
	http.ListenAndServe(":4000", mux)
}

// @Summary Generate a cpf
// @Description Endpoint that returns a new cpf
// @Success 200 {object} CpfResponse
// @Router /cpf [get]
func handleCpf(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintln(w, documents.GenerateCpf())
}

// @Summary Generate a cnpj
// @Description Endpoint that returns a new cnpj
// @Success 200 {string} string
// @Router /cnpj [get]
func handleCnpj(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintln(w, documents.GeneraterCnpj())
}
